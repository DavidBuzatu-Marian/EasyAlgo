{"version":3,"sources":["images/undraw_reading_time_gvg0.svg","images/close.svg","images/undraw_visual_data_b1wx.svg","images/NumbersMenu.svg","images/BinaryMenu.svg","images/undraw_sorting_thoughts_6d48.svg","hooks/initArr.js","actions/animation.js","actions/types.js","components/utils/Constants.js","reducers/animation.js","reducers/bitsAnimation.js","reducers/navbar.js","reducers/index.js","store.js","algorithms/Utils.js","algorithms/QuickSort.js","hooks/animateBars.js","hooks/colors.js","hooks/quickSort.js","algorithms/MergeSort.js","hooks/mergeSort.js","algorithms/BubbleSort.js","algorithms/HeapSort.js","algorithms/InsertionSort.js","hooks/insertionSort.js","components/visualizer/Canvas.js","hooks/heapSort.js","hooks/bubbleSort.js","components/utils/ModalTitle.js","components/utils/ModalDescription.js","components/utils/ModalButtons.js","components/utils/ModalCode.js","components/utils/Modal.js","components/visualizer/ContainerHeader.js","components/visualizer/NumbersVisualizer.js","components/layout/NumbersPage.js","actions/bitsAnimation.js","components/layout/DropdownBox.js","actions/navbar.js","components/layout/Controls.js","components/layout/Title.js","components/layout/Navbar.js","hooks/initBits.js","hooks/radixSort.js","algorithms/RadixStraight.js","hooks/radixStraight.js","components/visualizer/Table.js","components/visualizer/BitsVisualizer.js","components/layout/BitsPage.js","App.js","index.js"],"names":["module","exports","randomIntegerFromInterval","min","max","Math","floor","random","setAnimationState","state","dispatch","a","type","payload","MERGE_SORT_DESCRIPTION","merge_sort_extras","MERGE_SORT_CODE","sortingTypes","subMenus","0","1","subMenusMore","activeDescription","activeExtras","activeCode","initialState","animations","elements","animationSpeed","isAnimated","isSorted","elementsSize","sortType","sortMethod","start","barWidth","activeCategory","activeMethod","combineReducers","animation","action","bitsAnimation","navbar","middlewares","thunk","devTools","applyMiddleware","store","createStore","rootReducer","swap","items","leftIndex","rightIndex","push","temp","quickSort","left","right","index","length","partition","middleCoord","pivot","i","j","indexOf","animateBars","canvasState","setCanvasState","animationObj","nrTimeout","timeoutArr","isPivottedSort","primary_color","secondary_color","pivot_color","auxiliaryArray","animationsLength","elementsBars","document","getElementsByClassName","barOneIdx","indexOrHeight","isComparisson","barOneStyle","style","barTwoStyle","color","pivotColor","setTimeout","backgroundColor","height","getElementsByName","setAttribute","getAttribute","animateQuickSort","slice","array","getQuickSortAnimations","getMergeSortAnimations","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","animateMergeSort","elementsBar","barTwoIdx","newHeight","getBubbleSortAnimations","arrayLength","bubbleSort","getHeapSortAnimations","indexOfLastParent","indexOfLastChild","compareParentWithChildren","heapSort","parent","getInsertionSortAnimations","insertionSort","connect","useState","useEffect","animateHeapSort","animateBubbleSort","animateInsertionSort","clearAllTimeouts","initArr","clearTimeout","pop","map","value","idx","className","key","name","width","ModalTitle","ModalDescription","description","ModalButtons","extras","ext","id","href","target","rel","ModalCode","code","url","setState","src","Close","alt","onClick","e","toggle","Illustration","NumbersVisualizer","NumbersPage","setBitsState","setNavState","link","sortingType","submenu","submenuMore","dropDownState","setDropDownState","disabled","to","IconNum","IconBin","size","verticalAlign","menu","htmlFor","onChange","Title","Navbar","links","pad","n","z","Array","join","radixStraight","arrLength","nrPasses","nrBits","counter","tableCount","2","3","getMBits","toString","shift","number","m","shiftValue","animateRadixStraightSort","tableState","setTableState","getRadixStraightAnimations","reset","isTableMutation","paragraphElements","resetTable","tdOfNumber","getElementById","tdInnerHTML","innerHTML","trOfKey","divOfNumber","tdInnerHTMLText","substr","pOfNumber","stringInnerHTML","tdOfNumbers","includes","initBits","scope","BitsVisualizer","BitsPage","App","basename","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.7cd9b77e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_reading_time_gvg0.4235ed78.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.50330cae.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_visual_data_b1wx.0370826f.svg\";","module.exports = __webpack_public_path__ + \"static/media/NumbersMenu.20f2b23d.svg\";","module.exports = __webpack_public_path__ + \"static/media/BinaryMenu.d2c2149b.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_sorting_thoughts_6d48.34d6b0b4.svg\";","export function initArr(elementsSize) {\r\n  const elements = [];\r\n\r\n  for (let i = 0; i < elementsSize; i++) {\r\n    elements.push(randomIntegerFromInterval(5, 600));\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\nexport function randomIntegerFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import { SET_ANIMATION_STATE } from './types';\r\n\r\nexport const setAnimationState = (state) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_ANIMATION_STATE,\r\n    payload: state,\r\n  });\r\n};\r\n","export const SET_ANIMATION_STATE = 'SET_ANIMATION_STATE';\r\nexport const SET_BITS_STATE = 'SET_BITS_STATE';\r\nexport const SET_NAV_STATE = 'SET_NAV_STATE';\r\n","export const MERGE_SORT = 'Merge Sort';\r\nexport const QUICK_SORT = 'Quick Sort';\r\nexport const HEAP_SORT = 'Heap Sort';\r\nexport const BUBBLE_SORT = 'Bubble Sort';\r\nexport const INSERTION_SORT = 'Insertion Sort';\r\nexport const RADIX_SORT = 'Radix Sort';\r\nexport const RADIX_STRAIGHT = 'Radix Straight Sort';\r\nexport const NUMBER_TYPE = 'Number Type';\r\nexport const BINARY_TYPE = 'Binary Type';\r\n\r\n// Merge sort\r\nexport const MERGE_SORT_DESCRIPTION =\r\n  'Merge Sort is a general purpose sorting algorithm that is implemented using the Divide and Conquer approach. This means that merge sort works by solving part of sorting, and then merging together the results to form the final, sorted array.';\r\nexport const merge_sort_extras = [\r\n  'https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/overview-of-merge-sort',\r\n  'https://en.wikipedia.org/wiki/Merge_sort',\r\n  'https://www.youtube.com/watch?v=mB5HXBb_HY8',\r\n];\r\nexport const MERGE_SORT_CODE =\r\n  'https://gist.github.com/DavidBuzatu-Marian/088caac15a78ef63f4b783fe4259a437#merge-sort.js';\r\n\r\n// Heap sort\r\nexport const HEAP_SORT_DESCRIPTION =\r\n  'Heap Sort is a comparison based sorting algorithm. It works by creating a heap, and then constantly removing the biggest element (see MaxHeap). After removing the biggest element, the heap is reordered to get the maximum at the top. It can be seen as an improved insertion sort.';\r\nexport const heap_sort_extras = [\r\n  'https://en.wikipedia.org/wiki/Heapsort',\r\n  'https://www.youtube.com/watch?v=HqPJF2L5h9U',\r\n  'https://www.youtube.com/watch?v=2DmK_H7IdTo',\r\n  'https://www.hackerearth.com/practice/algorithms/sorting/heap-sort/tutorial/',\r\n];\r\n\r\nexport const HEAP_SORT_CODE =\r\n  'https://gist.github.com/DavidBuzatu-Marian/cfba9e74a5e6111ee1177a034ef79ef5';\r\n\r\n// Quick sort\r\nexport const QUICK_SORT_DESCRIPTION =\r\n  \"Quick Sort is considered to be the 'go to' when it comes to sorting algorithms. It is an easy algorithm (very similar to merge sort) that sorts in place. It works by searching for a pivot and comparing all the elements in its left with the ones in its right, switching them when the ordering is not met.\";\r\n\r\nexport const quick_sort_extras = [\r\n  'https://en.wikipedia.org/wiki/Quicksort',\r\n  'https://www.youtube.com/watch?v=7h1s2SojIRw',\r\n  'https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort',\r\n  'https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/analysis-of-quicksort',\r\n];\r\n\r\nexport const QUICK_SORT_CODE =\r\n  'https://gist.github.com/DavidBuzatu-Marian/f0f50f75da06bdc26cd471e6fbea6104';\r\n\r\n// Insertion sort\r\nexport const INSERTION_SORT_DESCRIPTION =\r\n  'Insertion Sort works by sorting the array step by step. It will first sort the array with 1 element, then with 2, and so on. After an iteration, we have a subarray from 1 to that step that is sorted. This approach is much more slower than the rest, but it has its applications (e.g. sorting very small lists)';\r\nexport const insertion_sort_extras = [\r\n  'https://www.quora.com/What-are-practical-applications-of-insertion-sort',\r\n  'https://www.geeksforgeeks.org/insertion-sort/',\r\n  'https://en.wikipedia.org/wiki/Insertion_sort#:~:text=Insertion%20sort%20is%20a%20simple,%2C%20heapsort%2C%20or%20merge%20sort.',\r\n];\r\nexport const INSERTION_SORT_CODE =\r\n  'https://gist.github.com/DavidBuzatu-Marian/0664bd3841b1d7567ed64be0dfdd762d';\r\n\r\n// Bubble sort\r\nexport const BUBBLE_SORT_DESCRIPTION =\r\n  \"Bubble Sort is probably the first sorting algorithm taught, considering its simplicity. At the end of an iteration, the biggest element will be positioned at the end of the current subarray. This means that the biggest numbers 'bubble up' to the end, just like bubbles in water\";\r\nexport const bubble_sort_extras = [\r\n  'https://brilliant.org/wiki/bubble-sort/',\r\n  'https://en.wikipedia.org/wiki/Bubble_sort',\r\n  'https://medium.com/madhash/bubble-sort-in-a-nutshell-how-when-where-4965e77910d8',\r\n];\r\nexport const BUBBLE_SORT_CODE =\r\n  'https://gist.github.com/DavidBuzatu-Marian/fdfc0fdbba5a6e1b74ca0fd3baf8fc70';\r\n\r\n// Radix straight sort\r\nexport const RADIX_STRAIGHT_DESCRIPTION =\r\n  'Radix Straight Sort is an integer sorting algorithm. It works by taking groups of subparts of the integer and grouping the numbers after them. In the binary version I implemented, it takes 2 pairs of bits (starting from the least significant ones) and groups the integers by them, resulting in a sorted array when put back';\r\nexport const radix_straight_extras = [\r\n  'https://en.wikipedia.org/wiki/Radix_sort',\r\n  'https://www.digitalocean.com/community/tutorials/js-radix-sort',\r\n  'https://www.youtube.com/watch?v=xhr26ia4k38',\r\n  'https://brilliant.org/wiki/radix-sort/',\r\n];\r\nexport const RADIX_STRAIGHT_CODE =\r\n  'https://gist.github.com/DavidBuzatu-Marian/aeb70c710e6a52ed1ac62e0b3b5e05ee';\r\n\r\nexport const sortingTypes = [NUMBER_TYPE, BINARY_TYPE];\r\nexport const subMenus = {\r\n  0: [MERGE_SORT, HEAP_SORT, QUICK_SORT, BUBBLE_SORT, INSERTION_SORT],\r\n  1: [RADIX_STRAIGHT],\r\n};\r\n\r\nexport const subMenusMore = {\r\n  0: [\r\n    {\r\n      activeDescription: MERGE_SORT_DESCRIPTION,\r\n      activeExtras: merge_sort_extras,\r\n      activeCode: MERGE_SORT_CODE,\r\n    },\r\n    {\r\n      activeDescription: HEAP_SORT_DESCRIPTION,\r\n      activeExtras: heap_sort_extras,\r\n      activeCode: HEAP_SORT_CODE,\r\n    },\r\n    {\r\n      activeDescription: QUICK_SORT_DESCRIPTION,\r\n      activeExtras: quick_sort_extras,\r\n      activeCode: QUICK_SORT_CODE,\r\n    },\r\n    {\r\n      activeDescription: BUBBLE_SORT_DESCRIPTION,\r\n      activeExtras: bubble_sort_extras,\r\n      activeCode: BUBBLE_SORT_CODE,\r\n    },\r\n    {\r\n      activeDescription: INSERTION_SORT_DESCRIPTION,\r\n      activeExtras: insertion_sort_extras,\r\n      activeCode: INSERTION_SORT_CODE,\r\n    },\r\n  ],\r\n  1: [\r\n    {\r\n      activeDescription: RADIX_STRAIGHT_DESCRIPTION,\r\n      activeExtras: radix_straight_extras,\r\n      activeCode: RADIX_STRAIGHT_CODE,\r\n    },\r\n  ],\r\n};\r\n","import { SET_ANIMATION_STATE } from '../actions/types';\r\nimport { MERGE_SORT } from '../components/utils/Constants';\r\n\r\nconst initialState = {\r\n  animations: [],\r\n  elements: [],\r\n  animationSpeed: 1,\r\n  isAnimated: false,\r\n  isSorted: false,\r\n  elementsSize: 0,\r\n  sortType: 1,\r\n  sortMethod: MERGE_SORT,\r\n  start: false,\r\n  barWidth: 15,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ANIMATION_STATE:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_BITS_STATE } from '../actions/types';\r\nimport { RADIX_SORT } from '../components/utils/Constants';\r\n\r\nconst initialState = {\r\n  animations: [],\r\n  elements: [],\r\n  animationSpeed: 100,\r\n  isAnimated: false,\r\n  isSorted: false,\r\n  elementsSize: 0,\r\n  sortMethod: RADIX_SORT,\r\n  start: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_BITS_STATE:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_NAV_STATE } from '../actions/types';\r\nimport {\r\n  MERGE_SORT,\r\n  MERGE_SORT_CODE,\r\n  MERGE_SORT_DESCRIPTION,\r\n  merge_sort_extras,\r\n  NUMBER_TYPE,\r\n} from '../components/utils/Constants';\r\n\r\nconst initialState = {\r\n  activeCategory: NUMBER_TYPE,\r\n  activeMethod: MERGE_SORT,\r\n  activeDescription: MERGE_SORT_DESCRIPTION,\r\n  activeCode: MERGE_SORT_CODE,\r\n  activeExtras: merge_sort_extras,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_NAV_STATE:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport animation from './animation';\r\nimport bitsAnimation from './bitsAnimation';\r\nimport navbar from './navbar';\r\n\r\nexport default combineReducers({ animation, bitsAnimation, navbar });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middlewares = [thunk];\r\nconst devTools =\r\n  process.env.NODE_ENV === 'production'\r\n    ? applyMiddleware(...middlewares)\r\n    : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\nconst store = createStore(rootReducer, initialState, devTools);\r\n\r\nexport default store;\r\n","export const swap = (items, animations, leftIndex, rightIndex) => {\r\n  // push the index and the height of the element we swap\r\n  animations.push([leftIndex, items[rightIndex], 0]);\r\n  animations.push([rightIndex, items[leftIndex], 0]);\r\n  let temp = items[leftIndex];\r\n  items[leftIndex] = items[rightIndex];\r\n  items[rightIndex] = temp;\r\n};\r\n","import { swap } from './Utils';\r\n\r\nexport const getQuickSortAnimations = (array) => {\r\n  const animations = [];\r\n  if (array.length < 1) {\r\n    return array;\r\n  }\r\n  quickSort(array, animations, 0, array.length - 1);\r\n  return animations;\r\n};\r\n\r\nconst quickSort = (items, animations, left, right) => {\r\n  var index;\r\n  if (items.length > 1) {\r\n    index = partition(items, animations, left, right);\r\n    if (left < index - 1) {\r\n      quickSort(items, animations, left, index - 1);\r\n    }\r\n    if (index < right) {\r\n      quickSort(items, animations, index, right);\r\n    }\r\n  }\r\n  return items;\r\n};\r\n\r\nconst partition = (items, animations, left, right) => {\r\n  let middleCoord = Math.floor((right + left) / 2);\r\n  let pivot = items[middleCoord],\r\n    i = left,\r\n    j = right;\r\n  while (i <= j) {\r\n    middleCoord = items.indexOf(pivot);\r\n    while (items[i] < pivot) {\r\n      animations.push([i, middleCoord, 1]);\r\n      animations.push([i, middleCoord, 1]);\r\n      i++;\r\n    }\r\n    while (items[j] > pivot) {\r\n      animations.push([j, middleCoord, 1]);\r\n      animations.push([j, middleCoord, 1]);\r\n      j--;\r\n    }\r\n    if (i <= j) {\r\n      swap(items, animations, i, j);\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n};\r\n","import { PIVOT_COLOR, PRIMARY_COLOR, SECONDARY_COLOR } from './colors';\r\nimport store from '../store';\r\nimport { setAnimationState } from '../actions/animation';\r\n\r\nexport const animateBars = (\r\n  canvasState,\r\n  setCanvasState,\r\n  animationObj,\r\n  i,\r\n  nrTimeout,\r\n  timeoutArr,\r\n  isPivottedSort = false,\r\n  primary_color = PRIMARY_COLOR,\r\n  secondary_color = SECONDARY_COLOR,\r\n  pivot_color = PIVOT_COLOR\r\n) => {\r\n  let {\r\n    animations,\r\n    auxiliaryArray,\r\n    animationSpeed,\r\n    animationsLength,\r\n  } = animationObj;\r\n  const elementsBars = document.getElementsByClassName('elements-bar');\r\n  const [barOneIdx, indexOrHeight, isComparisson] = animations[i];\r\n  if (isComparisson === 1) {\r\n    const barOneStyle = elementsBars[barOneIdx].style;\r\n    const barTwoStyle = elementsBars[indexOrHeight].style;\r\n    const color = i % 2 === 0 ? secondary_color : primary_color;\r\n    const pivotColor = i % 2 === 0 ? pivot_color : primary_color;\r\n    setCanvasState({\r\n      ...canvasState,\r\n      timeoutArr: [\r\n        ...timeoutArr,\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = isPivottedSort ? pivotColor : color;\r\n          if (nrTimeout === animationsLength) {\r\n            store.dispatch(\r\n              setAnimationState({\r\n                isAnimated: false,\r\n                elements: auxiliaryArray,\r\n                isSorted: true,\r\n              })\r\n            );\r\n          }\r\n        }, i * animationSpeed),\r\n      ],\r\n    });\r\n  } else {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      timeoutArr: [\r\n        ...timeoutArr,\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          const barOneStyle = elementsBars[barOneIdx].style;\r\n          barOneStyle.height = `${indexOrHeight}px`;\r\n          const barPivot = document.getElementsByName(`${indexOrHeight}`)[0];\r\n          barPivot.setAttribute(\r\n            'name',\r\n            elementsBars[barOneIdx].getAttribute('name')\r\n          );\r\n          elementsBars[barOneIdx].setAttribute('name', `${indexOrHeight}`);\r\n          if (nrTimeout === animationsLength) {\r\n            store.dispatch(\r\n              setAnimationState({\r\n                isAnimated: false,\r\n                elements: auxiliaryArray,\r\n                isSorted: true,\r\n              })\r\n            );\r\n          }\r\n        }, i * animationSpeed),\r\n      ],\r\n    });\r\n  }\r\n};\r\n","export const SORTED_COLOR = '#FFB100';\r\nexport const PRIMARY_COLOR = '#FF6663';\r\nexport const PIVOT_COLOR = '#FF6666';\r\nexport const SECONDARY_COLOR = '#759EB8';\r\nexport const BIT_COLOR = '#7D666E';\r\n// '#005959', '#05A6A5'\r\n","import store from '../store';\r\nimport { setAnimationState } from '../actions/animation';\r\nimport { getQuickSortAnimations } from '../algorithms/QuickSort';\r\nimport { animateBars } from './animateBars';\r\nexport const animateQuickSort = (\r\n  canvasState,\r\n  setCanvasState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getQuickSortAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setAnimationState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    animateBars(\r\n      canvasState,\r\n      setCanvasState,\r\n      { animations, auxiliaryArray, animationSpeed, animationsLength },\r\n      i,\r\n      nrTimeout++,\r\n      timeoutArr,\r\n      true\r\n    );\r\n  }\r\n};\r\n","// algorithm from algoexpert.com for optimized merge sort\r\nexport function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j, 1]);\r\n    animations.push([i, j, 1]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i], 0]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j], 0]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i, 1]);\r\n    animations.push([i, i, 1]);\r\n    animations.push([k, auxiliaryArray[i], 0]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j, 1]);\r\n    animations.push([j, j, 1]);\r\n    animations.push([k, auxiliaryArray[j], 0]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","import store from '../store';\r\nimport { setAnimationState } from '../actions/animation';\r\nimport { getMergeSortAnimations } from '../algorithms/MergeSort';\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from './colors';\r\nexport const animateMergeSort = (\r\n  canvasState,\r\n  setCanvasState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getMergeSortAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setAnimationState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    const elementsBar = document.getElementsByClassName('elements-bar');\r\n    const isColorChange = i % 3 !== 2;\r\n    if (isColorChange) {\r\n      const [barOneIdx, barTwoIdx] = animations[i];\r\n      const barOneStyle = elementsBar[barOneIdx].style;\r\n      const barTwoStyle = elementsBar[barTwoIdx].style;\r\n      const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n      setCanvasState({\r\n        ...canvasState,\r\n        timeoutArr: [\r\n          ...timeoutArr,\r\n          setTimeout(() => {\r\n            nrTimeout++;\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n          }, i * animationSpeed),\r\n        ],\r\n      });\r\n    } else {\r\n      setCanvasState({\r\n        ...canvasState,\r\n        timeoutArr: [\r\n          ...timeoutArr,\r\n          setTimeout(() => {\r\n            nrTimeout++;\r\n            const [barOneIdx, newHeight] = animations[i];\r\n            const barOneStyle = elementsBar[barOneIdx].style;\r\n            barOneStyle.height = `${newHeight}px`;\r\n            const barPivot = document.getElementsByName(`${newHeight}`)[0];\r\n            barPivot.setAttribute(\r\n              'name',\r\n              elementsBar[barOneIdx].getAttribute('name')\r\n            );\r\n            elementsBar[barOneIdx].setAttribute('name', `${newHeight}`);\r\n            if (nrTimeout === animationsLength) {\r\n              store.dispatch(\r\n                setAnimationState({\r\n                  isAnimated: false,\r\n                  elements: auxiliaryArray,\r\n                  isSorted: true,\r\n                })\r\n              );\r\n            }\r\n          }, i * animationSpeed),\r\n        ],\r\n      });\r\n    }\r\n  }\r\n};\r\n","import { swap } from './Utils';\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n\r\n  bubbleSort(array, array.length, animations);\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSort(array, arrayLength, animations) {\r\n  for (let i = 0; i < arrayLength; i++) {\r\n    for (let j = 0; j < arrayLength - 1 - i; j++) {\r\n      animations.push([j, j + 1, 1]);\r\n      animations.push([j, j + 1, 1]);\r\n      if (array[j] > array[j + 1]) {\r\n        swap(array, animations, j, j + 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { swap } from './Utils';\r\n\r\nexport function getHeapSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n  heapSort(array, array.length, animations);\r\n  return animations;\r\n}\r\n\r\nfunction compareParentWithChildren(array, length, index, animations) {\r\n  let parent = index;\r\n  let left = index * 2 + 1;\r\n  let right = left + 1;\r\n  /* check if left child is greater. If it is\r\n   * parent will take its index.\r\n   * check if left is smaller than length\r\n   * in order to not compare with already sorted nodes\r\n   */\r\n  if (left < length) {\r\n    animations.push([left, parent, 1]);\r\n    animations.push([left, parent, 1]);\r\n    if (array[left] > array[parent]) {\r\n      parent = left;\r\n    }\r\n  }\r\n  /* check if right child is greater. If it is\r\n   * parent will take its index\r\n   */\r\n  if (right < length) {\r\n    animations.push([right, parent, 1]);\r\n    animations.push([right, parent, 1]);\r\n    if (array[right] > array[parent]) {\r\n      parent = right;\r\n    }\r\n  }\r\n  /* check if we found another value greater than initial parent\r\n   * swap values and recall function\r\n   */\r\n  animations.push([parent, index, 1]);\r\n  animations.push([parent, index, 1]);\r\n  if (parent !== index) {\r\n    swap(array, animations, index, parent);\r\n    /* check if nodes below are still in right order */\r\n    compareParentWithChildren(array, length, parent, animations);\r\n  }\r\n}\r\n\r\nfunction heapSort(array, length, animations) {\r\n  let indexOfLastParent = Math.floor(length / 2 - 1);\r\n  let indexOfLastChild = length - 1;\r\n\r\n  while (indexOfLastParent >= 0) {\r\n    compareParentWithChildren(array, length, indexOfLastParent, animations);\r\n    indexOfLastParent--;\r\n  }\r\n  while (indexOfLastChild >= 0) {\r\n    /* swap root with last child because it is sorted */\r\n    swap(array, animations, 0, indexOfLastChild);\r\n    compareParentWithChildren(array, indexOfLastChild, 0, animations);\r\n    indexOfLastChild--;\r\n  }\r\n\r\n  return array;\r\n}\r\n","import { swap } from './Utils';\r\n\r\nexport function getInsertionSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n  insertionSort(array, array.length, animations);\r\n  return animations;\r\n}\r\n\r\nfunction insertionSort(array, length, animations) {\r\n  let i, j;\r\n  for (i = 1; i < length; ++i) {\r\n    for (j = i; j > 0 && array[j - 1] > array[j]; --j) {\r\n      animations.push([j - 1, j, 1]);\r\n      animations.push([j - 1, j, 1]);\r\n      swap(array, animations, j, j - 1);\r\n    }\r\n  }\r\n}\r\n","import store from '../store';\r\nimport { setAnimationState } from '../actions/animation';\r\nimport { getInsertionSortAnimations } from '../algorithms/InsertionSort';\r\nimport { animateBars } from './animateBars';\r\n\r\nexport const animateInsertionSort = (\r\n  canvasState,\r\n  setCanvasState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getInsertionSortAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setAnimationState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    animateBars(\r\n      canvasState,\r\n      setCanvasState,\r\n      { animations, auxiliaryArray, animationSpeed, animationsLength },\r\n      i,\r\n      nrTimeout++,\r\n      timeoutArr\r\n    );\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { initArr } from '../../hooks/initArr';\r\nimport { setAnimationState } from '../../actions/animation';\r\nimport { SORTED_COLOR, PRIMARY_COLOR } from '../../hooks/colors';\r\nimport { animateQuickSort } from '../../hooks/quickSort';\r\nimport { animateMergeSort } from '../../hooks/mergeSort';\r\nimport { animateBubbleSort } from '../../hooks/bubbleSort';\r\nimport { animateHeapSort } from '../../hooks/heapSort';\r\nimport { animateInsertionSort } from '../../hooks/insertionSort';\r\nimport {\r\n  BUBBLE_SORT,\r\n  HEAP_SORT,\r\n  INSERTION_SORT,\r\n  MERGE_SORT,\r\n  QUICK_SORT,\r\n} from '../utils/Constants';\r\n\r\nconst Canvas = ({ animation, setAnimationState }) => {\r\n  const [canvasState, setCanvasState] = useState({\r\n    timeoutArr: [],\r\n  });\r\n\r\n  const {\r\n    elements,\r\n    isSorted,\r\n    barWidth,\r\n    elementsSize,\r\n    sortMethod,\r\n    start,\r\n  } = animation;\r\n  const { timeoutArr } = canvasState;\r\n\r\n  useEffect(() => {\r\n    if (start && elementsSize > 0) {\r\n      switch (sortMethod) {\r\n        case MERGE_SORT:\r\n          animateMergeSort(canvasState, setCanvasState, timeoutArr, animation);\r\n          break;\r\n        case HEAP_SORT:\r\n          animateHeapSort(canvasState, setCanvasState, timeoutArr, animation);\r\n          break;\r\n        case QUICK_SORT:\r\n          animateQuickSort(canvasState, setCanvasState, timeoutArr, animation);\r\n          break;\r\n        case BUBBLE_SORT:\r\n          animateBubbleSort(canvasState, setCanvasState, timeoutArr, animation);\r\n          break;\r\n        case INSERTION_SORT:\r\n          animateInsertionSort(\r\n            canvasState,\r\n            setCanvasState,\r\n            timeoutArr,\r\n            animation\r\n          );\r\n          break;\r\n        default:\r\n          animateMergeSort(canvasState, setCanvasState, timeoutArr, animation);\r\n      }\r\n    } else {\r\n      clearAllTimeouts();\r\n      let elements = initArr(60);\r\n\r\n      setAnimationState({\r\n        elements,\r\n        isSorted: false,\r\n        isAnimated: false,\r\n        elementsSize: 60,\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [elementsSize, start]);\r\n\r\n  const clearAllTimeouts = () => {\r\n    while (timeoutArr.length > 0) {\r\n      clearTimeout(timeoutArr.pop());\r\n    }\r\n    setCanvasState({ timeoutArr: [] });\r\n  };\r\n\r\n  return elements.map((value, idx) => (\r\n    <div\r\n      className='elements-bar'\r\n      key={idx}\r\n      name={value}\r\n      style={{\r\n        height: `${value}px`,\r\n        width: `${barWidth}px`,\r\n        backgroundColor: isSorted ? SORTED_COLOR : PRIMARY_COLOR,\r\n      }}\r\n    ></div>\r\n  ));\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  animation: state.animation,\r\n});\r\n\r\nCanvas.propTypes = {\r\n  animation: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { setAnimationState })(Canvas);\r\n","import store from '../store';\r\nimport { setAnimationState } from '../actions/animation';\r\nimport { getHeapSortAnimations } from '../algorithms/HeapSort';\r\nimport { animateBars } from './animateBars';\r\n\r\nexport const animateHeapSort = (\r\n  canvasState,\r\n  setCanvasState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getHeapSortAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setAnimationState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    animateBars(\r\n      canvasState,\r\n      setCanvasState,\r\n      { animations, auxiliaryArray, animationSpeed, animationsLength },\r\n      i,\r\n      nrTimeout++,\r\n      timeoutArr\r\n    );\r\n  }\r\n};\r\n","import store from '../store';\r\nimport { setAnimationState } from '../actions/animation';\r\nimport { getBubbleSortAnimations } from '../algorithms/BubbleSort';\r\nimport { animateBars } from './animateBars';\r\n\r\nexport const animateBubbleSort = (\r\n  canvasState,\r\n  setCanvasState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getBubbleSortAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setAnimationState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    animateBars(\r\n      canvasState,\r\n      setCanvasState,\r\n      { animations, auxiliaryArray, animationSpeed, animationsLength },\r\n      i,\r\n      nrTimeout++,\r\n      timeoutArr\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nconst ModalTitle = ({ type }) => {\r\n  return <h3>{type}</h3>;\r\n};\r\n\r\nexport default ModalTitle;\r\n","import React from 'react';\r\n\r\nconst ModalDescription = ({ description }) => {\r\n  return <p>{description}</p>;\r\n};\r\n\r\nexport default ModalDescription;\r\n","import React from 'react';\r\n\r\nconst ModalButtons = ({ extras }) => {\r\n  return (\r\n    <div className='modal-container-buttons'>\r\n      {extras.map((ext, id) => (\r\n        <a key={id} href={ext} target='_blank' rel='noopener noreferrer'>\r\n          <button className='btn btn-modal'>External link {id + 1}</button>\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalButtons;\r\n","import React, { Fragment } from 'react';\r\nimport Gist from 'super-react-gist';\r\n\r\nconst ModalCode = ({ code }) => {\r\n  return (\r\n    <Fragment>\r\n      <p className='extra'>\r\n        *Code is from various sources, such as: AlgoExpert, Wikipedia,\r\n        GeeksForGeeks\r\n      </p>\r\n      <Gist url={code} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ModalCode;\r\n","import React from 'react';\r\nimport Illustration from '../../images/undraw_reading_time_gvg0.svg';\r\nimport Close from '../../images/close.svg';\r\nimport ModalTitle from './ModalTitle';\r\nimport ModalDescription from './ModalDescription';\r\nimport ModalButtons from './ModalButtons';\r\nimport ModalCode from './ModalCode';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Modal = ({\r\n  setState,\r\n  navbar: { activeMethod, activeDescription, activeCode, activeExtras },\r\n}) => {\r\n  return (\r\n    <div className='modal'>\r\n      <div className='modal-container'>\r\n        <img\r\n          className='close-img'\r\n          src={Close}\r\n          alt='Close'\r\n          onClick={(e) => setState({ toggle: false })}\r\n        />\r\n        <ModalTitle type={activeMethod}></ModalTitle>\r\n        <ModalDescription description={activeDescription}></ModalDescription>\r\n        <ModalCode code={activeCode}></ModalCode>\r\n        <div className='modal-footer'>\r\n          <img src={Illustration} alt='Studying' />\r\n          <ModalButtons extras={activeExtras}></ModalButtons>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  navbar: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  navbar: state.navbar,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Modal);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Modal from '../utils/Modal';\r\n\r\nconst ContainerHeader = ({ navbar: { activeMethod }, Illustration }) => {\r\n  const [state, setState] = useState({\r\n    toggle: false,\r\n  });\r\n\r\n  const { toggle } = state;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{activeMethod}</h2>\r\n      <button\r\n        className='btn btn-action'\r\n        onClick={(e) => setState({ toggle: true })}\r\n      >\r\n        Learn More\r\n      </button>\r\n      {toggle && <Modal toggle={toggle} setState={setState} />}\r\n      <img src={Illustration} alt='Illustration for data modeling' />\r\n    </div>\r\n  );\r\n};\r\n\r\nContainerHeader.propTypes = {\r\n  navbar: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  navbar: state.navbar,\r\n});\r\nexport default connect(mapStateToProps)(ContainerHeader);\r\n","import React from 'react';\r\nimport Canvas from './Canvas';\r\nimport ContainerHeader from './ContainerHeader';\r\nimport Illustration from '../../images/undraw_visual_data_b1wx.svg';\r\nconst NumbersVisualizer = () => {\r\n  return (\r\n    <div className='container'>\r\n      <ContainerHeader Illustration={Illustration}></ContainerHeader>\r\n      <div className='container-numbers'>\r\n        <Canvas></Canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumbersVisualizer;\r\n","import React, { Fragment } from 'react';\r\nimport NumbersVisualizer from '../visualizer/NumbersVisualizer';\r\n\r\nconst NumbersPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <NumbersVisualizer></NumbersVisualizer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NumbersPage;\r\n","import { SET_BITS_STATE } from './types';\r\n\r\nexport const setBitsState = (state) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_BITS_STATE,\r\n    payload: state,\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { ChevronDownIcon, ChevronUpIcon } from '@primer/octicons-react';\r\nimport { setAnimationState } from '../../actions/animation';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setBitsState } from '../../actions/bitsAnimation';\r\nimport { setNavState } from '../../actions/navbar';\r\nimport { BINARY_TYPE, NUMBER_TYPE } from '../utils/Constants';\r\nimport IconNum from '../../images/NumbersMenu.svg';\r\nimport IconBin from '../../images/BinaryMenu.svg';\r\nconst DropdownBox = ({\r\n  link,\r\n  sortingType,\r\n  submenu,\r\n  submenuMore,\r\n  setAnimationState,\r\n  animation: { isAnimated },\r\n  setBitsState,\r\n  bitsAnimation,\r\n  setNavState,\r\n}) => {\r\n  const [dropDownState, setDropDownState] = useState({\r\n    toggle: false,\r\n  });\r\n\r\n  const { toggle } = dropDownState;\r\n  const disabled = isAnimated || bitsAnimation.isAnimated;\r\n  return (\r\n    <div className='navbar-dropdown'>\r\n      <div className='navbar-dropdown-header'>\r\n        <Link to={link}>\r\n          <button\r\n            disabled={disabled}\r\n            className={toggle ? 'active' : ''}\r\n            onClick={(e) => setDropDownState({ toggle: !toggle })}\r\n          >\r\n            <img\r\n              src={sortingType === NUMBER_TYPE ? IconNum : IconBin}\r\n              alt='Numbers Menu'\r\n            />\r\n            {sortingType}\r\n            {!disabled &&\r\n              (toggle ? (\r\n                <ChevronUpIcon size={16} verticalAlign='middle' />\r\n              ) : (\r\n                <ChevronDownIcon size={16} verticalAlign='middle' />\r\n              ))}\r\n          </button>{' '}\r\n        </Link>\r\n      </div>\r\n      {toggle && (\r\n        <div className='navbar-dropdown-content'>\r\n          {submenu.map((menu, idx) => (\r\n            <Link to={link}>\r\n              <button\r\n                disabled={isAnimated || bitsAnimation.isAnimated}\r\n                key={idx}\r\n                onClick={(e) => {\r\n                  sortingType !== BINARY_TYPE\r\n                    ? setAnimationState({\r\n                        sortMethod: menu,\r\n                        elementsSize: 0,\r\n                        animations: [],\r\n                        start: false,\r\n                      })\r\n                    : setBitsState({\r\n                        sortMethod: menu,\r\n                        elementsSize: 0,\r\n                        animations: [],\r\n                        start: false,\r\n                      });\r\n                  setNavState({\r\n                    activeCategory: sortingType,\r\n                    activeMethod: menu,\r\n                    ...submenuMore[idx],\r\n                  });\r\n                }}\r\n              >\r\n                {menu}\r\n              </button>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdownBox.propTypes = {\r\n  sortingType: PropTypes.string.isRequired,\r\n  submenu: PropTypes.array.isRequired,\r\n  setAnimationState: PropTypes.func.isRequired,\r\n  setBitsState: PropTypes.func.isRequired,\r\n  animation: PropTypes.object.isRequired,\r\n  bitsAnimation: PropTypes.object.isRequired,\r\n  setNavState: PropTypes.func.isRequired,\r\n  submenuMore: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  animation: state.animation,\r\n  bitsAnimation: state.bitsAnimation,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAnimationState,\r\n  setBitsState,\r\n  setNavState,\r\n})(DropdownBox);\r\n","import { SET_NAV_STATE } from './types';\r\n\r\nexport const setNavState = (state) => async (dispatch) => {\r\n  dispatch({\r\n    type: SET_NAV_STATE,\r\n    payload: state,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setAnimationState } from '../../actions/animation';\r\nimport { setBitsState } from '../../actions/bitsAnimation';\r\nimport { NUMBER_TYPE } from '../utils/Constants';\r\n\r\nconst Controls = ({\r\n  setAnimationState,\r\n  navbar,\r\n  setBitsState,\r\n  bitsAnimation,\r\n  animation: { animationSpeed, isAnimated },\r\n}) => {\r\n  const onChange = (e) => {\r\n    if (navbar.activeCategory === NUMBER_TYPE) {\r\n      setAnimationState({ animationSpeed: e.target.value });\r\n    } else {\r\n      setBitsState({ animationSpeed: e.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='mt-3'>\r\n      <div className='form-group'>\r\n        <label htmlFor='animationSpeed'>AnimationSpeed (in ms)</label>\r\n        <input\r\n          className='form-control'\r\n          type='number'\r\n          id='animationSpeed'\r\n          name='animationSpeed'\r\n          value={\r\n            navbar.activeCategory === NUMBER_TYPE\r\n              ? animationSpeed\r\n              : bitsAnimation.animationSpeed\r\n          }\r\n          onChange={(e) => onChange(e)}\r\n          disabled={\r\n            navbar.activeCategory === NUMBER_TYPE\r\n              ? isAnimated\r\n              : bitsAnimation.isAnimated\r\n          }\r\n        />\r\n\r\n        <button\r\n          className='mt-3'\r\n          onClick={(e) =>\r\n            navbar.activeCategory === NUMBER_TYPE\r\n              ? setAnimationState({\r\n                  start: true,\r\n                  elementsSize: 0,\r\n                  animations: [],\r\n                })\r\n              : setBitsState({ start: true, elementsSize: 0, animations: [] })\r\n          }\r\n          disabled={\r\n            navbar.activeCategory === NUMBER_TYPE\r\n              ? isAnimated\r\n              : bitsAnimation.isAnimated\r\n          }\r\n        >\r\n          Start sort\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  animation: PropTypes.object.isRequired,\r\n  setAnimationState: PropTypes.func.isRequired,\r\n  setBitsState: PropTypes.func.isRequired,\r\n  navbar: PropTypes.object.isRequired,\r\n  bitsAnimation: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  animation: state.animation,\r\n  navbar: state.navbar,\r\n  bitsAnimation: state.bitsAnimation,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setBitsState, setAnimationState })(\r\n  Controls\r\n);\r\n","import React from 'react';\r\n\r\nconst Title = () => {\r\n  return <h1 className='title bold'>EasyAlgo</h1>;\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport DropdownBox from './DropdownBox';\r\nimport Controls from './Controls';\r\nimport { sortingTypes, subMenus, subMenusMore } from '../utils/Constants';\r\nimport Title from './Title';\r\n\r\nconst Navbar = () => {\r\n  const links = ['/', '/bits'];\r\n\r\n  return (\r\n    <div className='navbar'>\r\n      <Title></Title>\r\n\r\n      {sortingTypes.map((type, idx) => (\r\n        <DropdownBox\r\n          key={idx}\r\n          link={links[idx]}\r\n          sortingType={type}\r\n          submenu={subMenus[idx]}\r\n          submenuMore={subMenusMore[idx]}\r\n        />\r\n      ))}\r\n      <Controls></Controls>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { SORTED_COLOR } from './colors';\r\nimport { randomIntegerFromInterval } from './initArr';\r\n/* SPECIAL THANKS TO POINTY FROM  STACK OVERFLOW\r\n  https://stackoverflow.com/a/10073788/11023871\r\n  */\r\nexport const pad = (n, width, z) => {\r\n  z = z || '0';\r\n  n = n + '';\r\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n};\r\n\r\nexport const createBitDivs = (bits, isSorted) => {\r\n  let ps = [];\r\n  var keys = 0;\r\n  for (let bit of bits) {\r\n    ps.push(\r\n      <p\r\n        key={keys++}\r\n        name={bits + pad(bit, keys)}\r\n        className='col-2 bits'\r\n        style={{\r\n          backgroundColor: isSorted && SORTED_COLOR,\r\n        }}\r\n      >{`${bit}`}</p>\r\n    );\r\n  }\r\n  return ps;\r\n};\r\n\r\nexport const initBits = (elementsSize) => {\r\n  const elements = [];\r\n  for (let i = 0; i < elementsSize; i++) {\r\n    let value = randomIntegerFromInterval(1, 63);\r\n    !elements.includes(value) ? elements.push(value) : i--;\r\n  }\r\n\r\n  return elements;\r\n};\r\n","import store from '../store';\r\nimport { setBitsState } from '../actions/bitsAnimation';\r\nimport { getRadixSortAnimations } from '../algorithms/RadixSort';\r\nimport { BIT_COLOR, PRIMARY_COLOR } from './colors';\r\nexport const animateRadixSort = (\r\n  tableState,\r\n  setTableState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getRadixSortAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setBitsState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    const [NumberIdx, nameOrIndex, isComparisson, nameOrIndexJ] = animations[i];\r\n\r\n    if (isComparisson === 1) {\r\n      setTableState({\r\n        ...tableState,\r\n        timeoutArr: [\r\n          ...timeoutArr,\r\n          setTimeout(() => {\r\n            const arrayIndividualBitsI = document.getElementsByName(\r\n              nameOrIndex\r\n            )[0];\r\n            const BitStyleI = arrayIndividualBitsI.style;\r\n\r\n            const arrayIndividualBitsJ = document.getElementsByName(\r\n              nameOrIndexJ\r\n            )[0];\r\n            const BitStyleJ = arrayIndividualBitsJ.style;\r\n\r\n            const colorBitsI = i % 2 === 0 ? BIT_COLOR : PRIMARY_COLOR;\r\n            const colorBitsJ = i % 2 === 0 ? BIT_COLOR : PRIMARY_COLOR;\r\n            nrTimeout++;\r\n            BitStyleI.backgroundColor = colorBitsI;\r\n            BitStyleJ.backgroundColor = colorBitsJ;\r\n          }, i * animationSpeed),\r\n        ],\r\n      });\r\n    } else {\r\n      setTableState({\r\n        ...tableState,\r\n        timeoutArr: [\r\n          ...timeoutArr,\r\n          setTimeout(() => {\r\n            nrTimeout++;\r\n            const arrayBits = document.getElementsByClassName('array-binary');\r\n            const Number2Div = document.getElementsByName(nameOrIndex)[0];\r\n            const Number1Div = arrayBits[NumberIdx];\r\n            const Number2DivName = Number2Div.getAttribute('name');\r\n            Number2Div.setAttribute('name', Number1Div.getAttribute('name'));\r\n            Number1Div.setAttribute('name', Number2DivName);\r\n            /* swap innet HTML */\r\n            const innerHTML = Number1Div.innerHTML;\r\n            Number1Div.innerHTML = Number2Div.innerHTML;\r\n            Number2Div.innerHTML = innerHTML;\r\n            if (nrTimeout === animationsLength) {\r\n              store.dispatch(\r\n                setBitsState({\r\n                  isAnimated: false,\r\n                  elements: auxiliaryArray,\r\n                  isSorted: true,\r\n                })\r\n              );\r\n            }\r\n          }, i * animationSpeed),\r\n        ],\r\n      });\r\n    }\r\n  }\r\n};\r\n","export const getRadixStraightAnimations = (array) => {\r\n  const animations = [];\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n  radixStraight(array, array.length, animations);\r\n  return animations;\r\n};\r\n\r\nconst radixStraight = (array, arrLength, animations) => {\r\n  let i = 0,\r\n    nrBits = 6,\r\n    mask = 2,\r\n    nrPasses = 0;\r\n  for (nrPasses = 0; nrPasses < nrBits / mask; nrPasses++) {\r\n    let counter = 0;\r\n    let tableCount = { 0: [], 1: [], 2: [], 3: [] };\r\n    for (i = 0; i < arrLength; i++) {\r\n      let key = getMBits(array[i], mask, nrPasses * mask).toString();\r\n      tableCount[key].push(array[i]);\r\n      animations.push([key, array[i], 1]);\r\n      animations.push([key, array[i], 1]);\r\n    }\r\n\r\n    for (var key in tableCount) {\r\n      while (tableCount[key].length > 0) {\r\n        array[counter++] = tableCount[key].shift();\r\n        animations.push([key, array[counter - 1], 0]);\r\n        animations.push([key, array[counter - 1], 0]);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst getMBits = (number, m, shiftValue) => {\r\n  return (number >> shiftValue) & ~(~0 << m);\r\n};\r\n","import store from '../store';\r\nimport { setBitsState } from '../actions/bitsAnimation';\r\nimport { getRadixStraightAnimations } from '../algorithms/RadixStraight';\r\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from './colors';\r\nimport { pad } from '../hooks/initBits';\r\n\r\nexport const animateRadixStraightSort = (\r\n  tableState,\r\n  setTableState,\r\n  timeoutArr,\r\n  animation\r\n) => {\r\n  const animationSpeed = animation.animationSpeed;\r\n  const auxiliaryArray = animation.elements.slice();\r\n  const animations = getRadixStraightAnimations(auxiliaryArray);\r\n  store.dispatch(\r\n    setBitsState({\r\n      animations,\r\n      isAnimated: true,\r\n      isSorted: false,\r\n    })\r\n  );\r\n  const animationsLength = animations.length;\r\n  let nrTimeout = 0;\r\n  let reset = 1;\r\n  var counter = 0;\r\n  for (let i = 0; i < animationsLength; i++) {\r\n    const [key, value, isTableMutation] = animations[i];\r\n    const paragraphElements = document.getElementsByClassName('array-binary');\r\n    if (isTableMutation) {\r\n      setTableState({\r\n        ...tableState,\r\n        timeoutArr: [\r\n          ...timeoutArr,\r\n          setTimeout(() => {\r\n            nrTimeout++;\r\n            if (reset) {\r\n              resetTable();\r\n              reset = 0;\r\n              counter = 0;\r\n            }\r\n            if (i % 2 === 0) {\r\n              let tdOfNumber = document.getElementById('col_' + key);\r\n              let tdInnerHTML = tdOfNumber.innerHTML;\r\n              tdOfNumber.innerHTML =\r\n                tdInnerHTML + pad(value.toString(2), 6) + ', ';\r\n            }\r\n            let trOfKey = document.getElementById('row_' + key);\r\n            let divOfNumber = document.getElementsByName(value)[0];\r\n            const color = i % 2 === 0 ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n\r\n            trOfKey.style.backgroundColor = color;\r\n            divOfNumber.style.backgroundColor = color;\r\n          }, i * animationSpeed),\r\n        ],\r\n      });\r\n    } else {\r\n      setTableState({\r\n        ...tableState,\r\n        timeoutArr: [\r\n          ...timeoutArr,\r\n          setTimeout(() => {\r\n            nrTimeout++;\r\n            if (i % 2 === 0) {\r\n              const tdOfNumber = document.getElementById('col_' + key);\r\n              const tdInnerHTML = tdOfNumber.innerHTML;\r\n              const tdInnerHTMLText = tdInnerHTML.substr(8);\r\n              tdOfNumber.innerHTML = tdInnerHTMLText;\r\n\r\n              const pOfNumber = paragraphElements[counter++];\r\n              pOfNumber.setAttribute('name', value);\r\n              const stringInnerHTML = pad(value.toString(2), 6);\r\n              pOfNumber.innerHTML = stringInnerHTML;\r\n            }\r\n            if (nrTimeout === animationsLength) {\r\n              store.dispatch(\r\n                setBitsState({\r\n                  isAnimated: false,\r\n                  elements: auxiliaryArray,\r\n                  isSorted: true,\r\n                })\r\n              );\r\n            }\r\n            reset = 1;\r\n          }, i * animationSpeed),\r\n        ],\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nconst resetTable = () => {\r\n  let tdOfNumbers = document.getElementsByClassName('table_row');\r\n  let i;\r\n  for (i = 0; i < tdOfNumbers.length; i++) {\r\n    tdOfNumbers[i].innerHTML = '';\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createBitDivs, initBits, pad } from '../../hooks/initBits';\r\nimport { RADIX_SORT, RADIX_STRAIGHT } from '../utils/Constants';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { PRIMARY_COLOR, SORTED_COLOR } from '../../hooks/colors';\r\nimport { setBitsState } from '../../actions/bitsAnimation';\r\nimport { animateRadixSort } from '../../hooks/radixSort';\r\nimport { animateRadixStraightSort } from '../../hooks/radixStraight';\r\n\r\nconst Table = ({ bitsAnimation, setBitsState }) => {\r\n  let { elements, sortMethod, isSorted, start, elementsSize } = bitsAnimation;\r\n\r\n  const [tableState, setTableState] = useState({\r\n    timeoutArr: [],\r\n  });\r\n\r\n  const { timeoutArr } = tableState;\r\n\r\n  useEffect(() => {\r\n    if (start && elementsSize > 0) {\r\n      switch (sortMethod) {\r\n        // case RADIX_SORT:\r\n        //   animateRadixSort(\r\n        //     tableState,\r\n        //     setTableState,\r\n        //     timeoutArr,\r\n        //     bitsAnimation\r\n        //   );\r\n        //   break;\r\n        case RADIX_STRAIGHT:\r\n          animateRadixStraightSort(\r\n            tableState,\r\n            setTableState,\r\n            timeoutArr,\r\n            bitsAnimation\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      clearAllTimeouts();\r\n      let elements = initBits(10);\r\n      setBitsState({\r\n        elements,\r\n        isSorted: false,\r\n        isAnimated: false,\r\n        elementsSize: 10,\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [elementsSize, start]);\r\n\r\n  const clearAllTimeouts = () => {\r\n    while (timeoutArr.length > 0) {\r\n      clearTimeout(timeoutArr.pop());\r\n    }\r\n    setTableState({ timeoutArr: [] });\r\n  };\r\n\r\n  return (\r\n    <div className='container-bits'>\r\n      {/* {sortMethod === RADIX_SORT ? (\r\n        elements.map((value, idx) => (\r\n          <div\r\n            className='array-binary col-12'\r\n            key={idx}\r\n            name={value}\r\n            style={{\r\n              backgroundColor: isSorted ? SORTED_COLOR : PRIMARY_COLOR,\r\n            }}\r\n          >\r\n            {createBitDivs(pad(value.toString(2), 6), isSorted)}\r\n          </div>\r\n        ))\r\n      ) : ( */}\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='table'>\r\n            {elements.map((value, idx) => (\r\n              <p\r\n                className={`array-binary text-center ` + value}\r\n                key={idx}\r\n                name={value}\r\n                style={{\r\n                  backgroundColor: isSorted ? SORTED_COLOR : PRIMARY_COLOR,\r\n                }}\r\n              >\r\n                {pad(value.toString(2), 6)}\r\n              </p>\r\n            ))}\r\n          </div>\r\n          <div className='table'>\r\n            <table className='table table-bordered table-dark'>\r\n              <thead>\r\n                <tr>\r\n                  <th scope='col'>Mask</th>\r\n                  <th scope='col'>Numbers</th>\r\n                  <th scope='col'>Round</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr id='row_0'>\r\n                  <th scope='row'>00</th>\r\n                  <td id='col_0' className='col_0 table_row'></td>\r\n                </tr>\r\n                <tr id='row_1'>\r\n                  <th scope='row'>01</th>\r\n                  <td id='col_1' className='col_1 table_row'></td>\r\n                </tr>\r\n                <tr id='row_2'>\r\n                  <th scope='row'>10</th>\r\n                  <td id='col_2' className='col_2 table_row'></td>\r\n                </tr>\r\n                <tr id='row_3'>\r\n                  <th scope='row'>11</th>\r\n                  <td id='col_3' className='col_3 table_row'></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  bitsAnimation: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  bitsAnimation: state.bitsAnimation,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setBitsState })(Table);\r\n","import React from 'react';\r\nimport ContainerHeader from './ContainerHeader';\r\nimport Table from './Table';\r\nimport Illustration from '../../images/undraw_sorting_thoughts_6d48.svg';\r\n\r\nconst BitsVisualizer = () => {\r\n  return (\r\n    <div className='container'>\r\n      <ContainerHeader Illustration={Illustration}></ContainerHeader>\r\n      <Table></Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitsVisualizer;\r\n","import React, { Fragment } from 'react';\r\nimport BitsVisualizer from '../visualizer/BitsVisualizer';\r\n\r\nconst BitsPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <BitsVisualizer></BitsVisualizer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BitsPage;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport './App.scss';\r\nimport NumbersPage from './components/layout/NumbersPage';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport Navbar from './components/layout/Navbar';\r\nimport BitsPage from './components/layout/BitsPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='container-body'>\r\n        <Router basename='/'>\r\n          <Navbar></Navbar>\r\n          <Route exact path='/bits' component={BitsPage}></Route>\r\n          <Route exact path='/' component={NumbersPage}></Route>\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}